{% extends 'page_root.html.twig' %} {% block content %}
<!-- biblio.html.twig-->
<div class="jumbotron" id="email_jumbotron">
    <div class="col mx-auto">
        <h2 class="email header" id="email_header" style="text-align:center">Мы будем рады получить от вас весточку!</h2>
    </div>
<form>
     <div class="row">
        <div class="col-sm-12 form-group">
            <label for="message">
                Сообщение:</label>
            <textarea class="form-control" type="textarea" name="message" id="message" maxlength="6000" rows="7" required></textarea>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6 form-group">
            <label for="name">
                Введите ваше имя:</label>
            <input type="text" class="form-control" id="name" name="name">
        </div>
        <div class="col-sm-6 form-group">
            <label for="email">
                Укажите e-mail:</label>
            <input type="email" class="form-control" id="email" name="email" required>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12 form-group text-center">
            <button type="submit" class="btn btn-lg btn-primary">Отправить</button>
        </div>
    </div>
</form>
<div class="alert" role="alert">
    <p id="result-text"></p>
</div>

</div>
<script>
const form = document.querySelector("form");
form.addEventListener("submit", (event) => {
  // prevent the form submit from refreshing the page
  event.preventDefault();

  const { name, email, message } = event.target;

	// Use your API endpoint URL you copied from the previous step
  const endpoint =
    "https://1v4j4cpr53.execute-api.us-west-2.amazonaws.com/default/sendContactEmail";
  // We use JSON.stringify here so the data can be sent as a string via HTTP
	const body = JSON.stringify({
    senderName: name.value,
    senderEmail: email.value,
    message: message.value
  });
  const requestOptions = {
    method: "POST",
    body
  };
  fetch(endpoint, requestOptions)
    .then((response) => {
      if (!response.ok) throw new Error("Error in fetch");
      return response.json();
    })
    .then((response) => {
      document.getElementById("result-text").innerText =
        "Сообщение отправлено!";
    })
    .catch((error) => {
      document.getElementById("result-text").innerText =
        "Hе удалось отправить сообщение.";
    });
});
</script>

{% endblock %}